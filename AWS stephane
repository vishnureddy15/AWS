Hibernate:===
When you restart the instance, it resumes from where it left off, including all applications and processes that were running. 
This feature essentially allows you to "pause" your instance rather than shutting it down completely.
Development and Testing: Developers can pause their EC2 instances when they are not actively working, then resume later with their environment (including data and configurations) fully intact.
Batch Processing: For workloads that are resource-intensive and can be interrupted (such as large data processing tasks), hibernating the instance can reduce cost and still allow for easy resumption.
==================================================================================
TCP and HTTP/HTTPS
TCP (Transmission Control Protocol) is a transport-layer protocol. It’s responsible for reliably transporting data between two devices, establishing a connection, and ensuring that the data is delivered in the correct order. 
It doesn’t concern itself with what kind of data is being transmitted (i.e., the actual content of the packets).
HTTP (Hypertext Transfer Protocol) and HTTPS (HTTP Secure) are application-layer protocols that use TCP as their transport protocol. 
HTTP/HTTPS defines how data is formatted and transmitted over the web (such as web pages, APIs, etc.). When a web browser requests a web page, it uses HTTP or HTTPS, but under the hood, it relies on TCP to ensure reliable communication between the client (your browser) and the server.
Trade-Offs: UDP vs. TCP    =========
While UDP is faster and more efficient in certain use cases, it comes with trade-offs:

Reliability: TCP guarantees that data arrives in order, without loss, and without duplication, making it the best choice for applications where reliability is critical (e.g., file transfers, web browsing, email).
Flow Control: TCP automatically adjusts the flow of data to avoid overwhelming the receiver or network, which is important for applications that need to manage large volumes of data without causing congestion.
Data Integrity: With TCP, if a packet is lost or corrupted, it is retransmitted. In contrast, UDP does not provide this error recovery mechanism, and applications must handle errors themselves if needed.
